// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/login-logs": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get system login log records, supporting filtering by username and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Get login logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username filter",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number, defaults to 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size, defaults to 20, maximum 100",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login log list",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "logs": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                },
                                "page": {
                                    "type": "number"
                                },
                                "page_size": {
                                    "type": "number"
                                },
                                "total": {
                                    "type": "number"
                                },
                                "total_pages": {
                                    "type": "number"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to get login logs",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/operation-logs": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get administrator operation log list with multi-condition filtering and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Logs"
                ],
                "summary": "Get operation log list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username filter",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource type filter",
                        "name": "resource",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Operation type filter",
                        "name": "operation",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Operation success status filter",
                        "name": "success",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start time filter (YYYY-MM-DD)",
                        "name": "start_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End time filter (YYYY-MM-DD)",
                        "name": "end_time",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number, default is 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size, default is 20, maximum is 100",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation log list",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "logs": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                },
                                "page": {
                                    "type": "number"
                                },
                                "page_size": {
                                    "type": "number"
                                },
                                "total": {
                                    "type": "number"
                                },
                                "total_pages": {
                                    "type": "number"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to get operation logs",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/operation-logs/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed information of a single operation log by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Logs"
                ],
                "summary": "Get operation log details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Log ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation log details",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "log": {
                                    "type": "object"
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid log ID",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Log not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/operation-stats": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get operation statistics information within a specified time range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Logs"
                ],
                "summary": "Get operation statistics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username filter",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start time (YYYY-MM-DD), default is 30 days ago",
                        "name": "start_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End time (YYYY-MM-DD), default is today",
                        "name": "end_time",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation statistics information",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "end_time": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "operation_stats": {
                                    "type": "object"
                                },
                                "resource_stats": {
                                    "type": "object"
                                },
                                "start_time": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to get operation statistics",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Login authentication using username and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login information",
                        "name": "loginData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "password": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "expires_at": {
                                    "type": "string"
                                },
                                "token": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too frequent requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Logout current user and add token to blacklist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid token",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Logout failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/dev-environments": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get current user's development environment list with pagination and filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Development Environment"
                ],
                "summary": "Get environment list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number, default is 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size, default is 10",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Environment type filter",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Environment name filter",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Environment list",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "environments": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                },
                                "total": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new development environment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Development Environment"
                ],
                "summary": "Create development environment",
                "parameters": [
                    {
                        "description": "Environment information",
                        "name": "environment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateEnvironmentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Environment created successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "environment": {
                                    "type": "object"
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/dev-environments/available-types": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get available environment types from system configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Development Environment"
                ],
                "summary": "Get available environment types",
                "responses": {
                    "200": {
                        "description": "Available environment types",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "types": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/dev-environments/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed information of a development environment by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Development Environment"
                ],
                "summary": "Get environment details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Environment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Environment details",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "environment": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Environment not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update specified development environment information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Development Environment"
                ],
                "summary": "Update environment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Environment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Environment update information",
                        "name": "environment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateEnvironmentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Environment updated successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete specified development environment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Development Environment"
                ],
                "summary": "Delete environment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Environment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Environment deleted successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Delete failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/dev-environments/{id}/env-vars": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get environment variables of specified environment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Development Environment"
                ],
                "summary": "Get environment variables",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Environment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Environment variables",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "env_vars": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Get failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update environment variables of specified environment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Development Environment"
                ],
                "summary": "Update environment variables",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Environment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Environment variables",
                        "name": "env_vars",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update successful",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Update failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/git-credentials": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the current user's Git credential list, supporting filtering by type and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Git Credentials"
                ],
                "summary": "Get Git credential list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Credential type filter (password/token/ssh_key)",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number, defaults to 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size, defaults to 20, maximum 100",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Credential list",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "credentials": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                },
                                "page": {
                                    "type": "number"
                                },
                                "page_size": {
                                    "type": "number"
                                },
                                "total": {
                                    "type": "number"
                                },
                                "total_pages": {
                                    "type": "number"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to get credential list",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new Git credential, supporting password, token, and SSH key types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Git Credentials"
                ],
                "summary": "Create Git credential",
                "parameters": [
                    {
                        "description": "Credential information",
                        "name": "credential",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateCredentialRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Credential created successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "credential": {
                                    "type": "object"
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to create credential",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/git-credentials/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed information of a specified Git credential by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Git Credentials"
                ],
                "summary": "Get Git credential details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Credential ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Credential details",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "credential": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid credential ID",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Credential not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update information of a specified Git credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Git Credentials"
                ],
                "summary": "Update Git credential",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Credential ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Credential update information",
                        "name": "credential",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateCredentialRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Credential updated successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Credential not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a specified Git credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Git Credentials"
                ],
                "summary": "Delete Git credential",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Credential ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Credential deleted successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid credential ID",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Credential not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Check server status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "Server status is normal",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "lang": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/projects": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get current user's project list with pagination and name filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Get project list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project name filter (fuzzy matching)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Protocol type filter (https/ssh)",
                        "name": "protocol",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number, defaults to 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size, defaults to 20",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project list",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "page": {
                                    "type": "number"
                                },
                                "page_size": {
                                    "type": "number"
                                },
                                "projects": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                },
                                "total": {
                                    "type": "number"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to get project list",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Create project",
                "parameters": [
                    {
                        "description": "Project information",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateProjectRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Project created successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "number"
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Project creation failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/projects/branches": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Fetch Git repository branch list using provided credentials and verify access permissions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Fetch Git repository branch list",
                "parameters": [
                    {
                        "description": "Repository information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.FetchRepositoryBranchesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetch branch list successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "result": {
                                    "$ref": "#/definitions/handlers.FetchRepositoryBranchesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to fetch branch list",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/projects/credentials": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Git credential list compatible with protocol type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Get compatible credentials",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Protocol type (https/ssh)",
                        "name": "protocol",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get credential list successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "credentials": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/projects/parse-url": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "根据输入的Git仓库URL自动检测协议类型并解析URL信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "项目"
                ],
                "summary": "解析Git仓库URL",
                "parameters": [
                    {
                        "description": "仓库URL",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.ParseRepositoryURLRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "解析成功",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "result": {
                                    "$ref": "#/definitions/handlers.ParseRepositoryURLResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/projects/validate-access": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Validate whether the specified Git repository can be accessed using provided credentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Validate Git repository access permissions",
                "parameters": [
                    {
                        "description": "Repository information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.ValidateRepositoryAccessRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Validation successful",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "can_access": {
                                    "type": "boolean"
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error or validation failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/projects/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get project detailed information by project ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Get project details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project details",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "project": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid project ID",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update specified project information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Update project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Project update information",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateProjectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project updated successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete specified project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Delete project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project deleted successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid project ID",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/system-configs": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all system configurations without pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System Configuration"
                ],
                "summary": "Get all configurations",
                "responses": {
                    "200": {
                        "description": "All configurations",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "configs": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update multiple system configurations in a single request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System Configuration"
                ],
                "summary": "Batch update configurations",
                "parameters": [
                    {
                        "description": "Configuration updates",
                        "name": "configs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.BatchUpdateConfigsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Configurations updated successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/task-conversations/{conversationId}/execution-log": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed execution log of AI task by conversation ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task Execution Log"
                ],
                "summary": "Get task conversation execution log",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Conversation ID",
                        "name": "conversationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.TaskExecutionLog"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/task-conversations/{conversationId}/execution/cancel": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Cancel AI task that is executing or pending",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task Execution Log"
                ],
                "summary": "Cancel task execution",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Conversation ID",
                        "name": "conversationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/task-conversations/{conversationId}/execution/retry": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retry failed or cancelled AI task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task Execution Log"
                ],
                "summary": "Retry task execution",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Conversation ID",
                        "name": "conversationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/user/current": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get information of current logged-in user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get current user information",
                "responses": {
                    "200": {
                        "description": "User information",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to get user information",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "database.ConversationStatus": {
            "type": "string",
            "enum": [
                "pending",
                "running",
                "success",
                "failed",
                "cancelled"
            ],
            "x-enum-varnames": [
                "ConversationStatusPending",
                "ConversationStatusRunning",
                "ConversationStatusSuccess",
                "ConversationStatusFailed",
                "ConversationStatusCancelled"
            ]
        },
        "database.DevEnvironment": {
            "type": "object",
            "properties": {
                "cpu_limit": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "env_vars": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "memory_limit": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "database.GitCredential": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "public_key": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/database.GitCredentialType"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "database.GitCredentialType": {
            "type": "string",
            "enum": [
                "password",
                "token",
                "ssh_key"
            ],
            "x-enum-varnames": [
                "GitCredentialTypePassword",
                "GitCredentialTypeToken",
                "GitCredentialTypeSSHKey"
            ]
        },
        "database.GitProtocolType": {
            "type": "string",
            "enum": [
                "https",
                "ssh"
            ],
            "x-enum-varnames": [
                "GitProtocolHTTPS",
                "GitProtocolSSH"
            ]
        },
        "database.Project": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "credential": {
                    "$ref": "#/definitions/database.GitCredential"
                },
                "credential_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "last_used": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "protocol": {
                    "$ref": "#/definitions/database.GitProtocolType"
                },
                "repo_url": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "database.Task": {
            "type": "object",
            "properties": {
                "conversation_count": {
                    "type": "integer"
                },
                "conversations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.TaskConversation"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "dev_environment": {
                    "$ref": "#/definitions/database.DevEnvironment"
                },
                "dev_environment_id": {
                    "type": "integer"
                },
                "has_pull_request": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "project": {
                    "$ref": "#/definitions/database.Project"
                },
                "project_id": {
                    "type": "integer"
                },
                "start_branch": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/database.TaskStatus"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "work_branch": {
                    "type": "string"
                },
                "workspace_path": {
                    "type": "string"
                }
            }
        },
        "database.TaskConversation": {
            "type": "object",
            "properties": {
                "commit_hash": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/database.ConversationStatus"
                },
                "task": {
                    "$ref": "#/definitions/database.Task"
                },
                "task_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "database.TaskExecutionLog": {
            "type": "object",
            "properties": {
                "completed_at": {
                    "type": "string"
                },
                "conversation": {
                    "$ref": "#/definitions/database.TaskConversation"
                },
                "conversation_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "docker_command": {
                    "type": "string"
                },
                "error_message": {
                    "type": "string"
                },
                "execution_logs": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "started_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "database.TaskStatus": {
            "type": "string",
            "enum": [
                "todo",
                "in_progress",
                "done",
                "cancelled"
            ],
            "x-enum-varnames": [
                "TaskStatusTodo",
                "TaskStatusInProgress",
                "TaskStatusDone",
                "TaskStatusCancelled"
            ]
        },
        "handlers.BatchUpdateConfigsRequest": {
            "type": "object",
            "required": [
                "configs"
            ],
            "properties": {
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.ConfigUpdateItem"
                    }
                }
            }
        },
        "handlers.ConfigUpdateItem": {
            "type": "object",
            "required": [
                "config_key",
                "config_value"
            ],
            "properties": {
                "category": {
                    "type": "string"
                },
                "config_key": {
                    "type": "string"
                },
                "config_value": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "is_editable": {
                    "type": "boolean"
                }
            }
        },
        "handlers.CreateCredentialRequest": {
            "description": "Request parameters for creating Git credentials",
            "type": "object",
            "required": [
                "name",
                "secret_data",
                "type"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Credential for GitHub projects"
                },
                "name": {
                    "type": "string",
                    "example": "My GitHub Credential"
                },
                "secret_data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "example": {
                        "{\"password\"": "\"mypassword\"}"
                    }
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "password",
                        "token",
                        "ssh_key"
                    ],
                    "example": "password"
                },
                "username": {
                    "type": "string",
                    "example": "myusername"
                }
            }
        },
        "handlers.CreateEnvironmentRequest": {
            "type": "object",
            "required": [
                "name",
                "type"
            ],
            "properties": {
                "cpu_limit": {
                    "type": "number",
                    "maximum": 16,
                    "minimum": 0.1
                },
                "description": {
                    "type": "string"
                },
                "env_vars": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "memory_limit": {
                    "type": "integer",
                    "maximum": 32768,
                    "minimum": 128
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateProjectRequest": {
            "type": "object",
            "required": [
                "name",
                "protocol",
                "repo_url"
            ],
            "properties": {
                "credential_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string",
                    "enum": [
                        "https",
                        "ssh"
                    ]
                },
                "repo_url": {
                    "type": "string"
                }
            }
        },
        "handlers.FetchRepositoryBranchesRequest": {
            "description": "Request parameters for fetching Git repository branch list",
            "type": "object",
            "required": [
                "repo_url"
            ],
            "properties": {
                "credential_id": {
                    "type": "integer",
                    "example": 1
                },
                "repo_url": {
                    "type": "string",
                    "example": "https://github.com/user/repo.git"
                }
            }
        },
        "handlers.FetchRepositoryBranchesResponse": {
            "description": "Response for fetching Git repository branch list",
            "type": "object",
            "properties": {
                "branches": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"main\"",
                        "\"develop\"",
                        "\"feature-1\"]"
                    ]
                },
                "can_access": {
                    "type": "boolean",
                    "example": true
                },
                "error_message": {
                    "type": "string",
                    "example": ""
                }
            }
        },
        "handlers.ParseRepositoryURLRequest": {
            "description": "解析Git仓库URL的请求参数",
            "type": "object",
            "required": [
                "repo_url"
            ],
            "properties": {
                "repo_url": {
                    "type": "string",
                    "example": "https://github.com/user/repo.git"
                }
            }
        },
        "handlers.ParseRepositoryURLResponse": {
            "description": "解析Git仓库URL的响应",
            "type": "object",
            "properties": {
                "host": {
                    "type": "string",
                    "example": "github.com"
                },
                "is_valid": {
                    "type": "boolean",
                    "example": true
                },
                "owner": {
                    "type": "string",
                    "example": "user"
                },
                "protocol": {
                    "type": "string",
                    "example": "https"
                },
                "repo": {
                    "type": "string",
                    "example": "repo"
                }
            }
        },
        "handlers.UpdateCredentialRequest": {
            "description": "Request parameters for updating Git credentials",
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Updated description"
                },
                "name": {
                    "type": "string",
                    "example": "Updated credential name"
                },
                "secret_data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "example": {
                        "{\"password\"": "\"newpassword\"}"
                    }
                },
                "username": {
                    "type": "string",
                    "example": "newusername"
                }
            }
        },
        "handlers.UpdateEnvironmentRequest": {
            "type": "object",
            "properties": {
                "cpu_limit": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "env_vars": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "memory_limit": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "handlers.UpdateProjectRequest": {
            "description": "Update project request parameters",
            "type": "object",
            "properties": {
                "credential_id": {
                    "type": "integer",
                    "example": 1
                },
                "description": {
                    "type": "string",
                    "example": "Updated project description"
                },
                "name": {
                    "type": "string",
                    "example": "Updated project name"
                },
                "repo_url": {
                    "type": "string",
                    "example": "https://github.com/user/repo.git"
                }
            }
        },
        "handlers.ValidateRepositoryAccessRequest": {
            "description": "Request parameters for validating Git repository access permissions",
            "type": "object",
            "required": [
                "repo_url"
            ],
            "properties": {
                "credential_id": {
                    "type": "integer",
                    "example": 1
                },
                "repo_url": {
                    "type": "string",
                    "example": "https://github.com/user/repo.git"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "XSHA Backend API",
	Description:      "XSHA Backend API service, providing user authentication, project management, Git credential management and other functions",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
