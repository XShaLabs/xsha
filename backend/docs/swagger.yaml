basePath: /api/v1
definitions:
  database.ConversationStatus:
    enum:
    - pending
    - running
    - success
    - failed
    - cancelled
    type: string
    x-enum-varnames:
    - ConversationStatusPending
    - ConversationStatusRunning
    - ConversationStatusSuccess
    - ConversationStatusFailed
    - ConversationStatusCancelled
  database.DevEnvironment:
    properties:
      cpu_limit:
        type: number
      created_at:
        type: string
      created_by:
        type: string
      description:
        type: string
      env_vars:
        type: string
      id:
        type: integer
      memory_limit:
        type: integer
      name:
        type: string
      type:
        type: string
      updated_at:
        type: string
    type: object
  database.GitCredential:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      public_key:
        type: string
      type:
        $ref: '#/definitions/database.GitCredentialType'
      updated_at:
        type: string
      username:
        type: string
    type: object
  database.GitCredentialType:
    enum:
    - password
    - token
    - ssh_key
    type: string
    x-enum-varnames:
    - GitCredentialTypePassword
    - GitCredentialTypeToken
    - GitCredentialTypeSSHKey
  database.GitProtocolType:
    enum:
    - https
    - ssh
    type: string
    x-enum-varnames:
    - GitProtocolHTTPS
    - GitProtocolSSH
  database.Project:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      credential:
        $ref: '#/definitions/database.GitCredential'
      credential_id:
        type: integer
      description:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      last_used:
        type: string
      name:
        type: string
      protocol:
        $ref: '#/definitions/database.GitProtocolType'
      repo_url:
        type: string
      updated_at:
        type: string
    type: object
  database.Task:
    properties:
      conversation_count:
        type: integer
      conversations:
        items:
          $ref: '#/definitions/database.TaskConversation'
        type: array
      created_at:
        type: string
      created_by:
        type: string
      dev_environment:
        $ref: '#/definitions/database.DevEnvironment'
      dev_environment_id:
        type: integer
      has_pull_request:
        type: boolean
      id:
        type: integer
      project:
        $ref: '#/definitions/database.Project'
      project_id:
        type: integer
      start_branch:
        type: string
      status:
        $ref: '#/definitions/database.TaskStatus'
      title:
        type: string
      updated_at:
        type: string
      work_branch:
        type: string
      workspace_path:
        type: string
    type: object
  database.TaskConversation:
    properties:
      commit_hash:
        type: string
      content:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: integer
      status:
        $ref: '#/definitions/database.ConversationStatus'
      task:
        $ref: '#/definitions/database.Task'
      task_id:
        type: integer
      updated_at:
        type: string
    type: object
  database.TaskExecutionLog:
    properties:
      completed_at:
        type: string
      conversation:
        $ref: '#/definitions/database.TaskConversation'
      conversation_id:
        type: integer
      created_at:
        type: string
      docker_command:
        type: string
      error_message:
        type: string
      execution_logs:
        type: string
      id:
        type: integer
      started_at:
        type: string
      updated_at:
        type: string
    type: object
  database.TaskStatus:
    enum:
    - todo
    - in_progress
    - done
    - cancelled
    type: string
    x-enum-varnames:
    - TaskStatusTodo
    - TaskStatusInProgress
    - TaskStatusDone
    - TaskStatusCancelled
  handlers.BatchUpdateConfigsRequest:
    properties:
      configs:
        items:
          $ref: '#/definitions/handlers.ConfigUpdateItem'
        type: array
    required:
    - configs
    type: object
  handlers.ConfigUpdateItem:
    properties:
      category:
        type: string
      config_key:
        type: string
      config_value:
        type: string
      description:
        type: string
      is_editable:
        type: boolean
    required:
    - config_key
    - config_value
    type: object
  handlers.CreateCredentialRequest:
    description: Request parameters for creating Git credentials
    properties:
      description:
        example: Credential for GitHub projects
        type: string
      name:
        example: My GitHub Credential
        type: string
      secret_data:
        additionalProperties:
          type: string
        example:
          '{"password"': '"mypassword"}'
        type: object
      type:
        enum:
        - password
        - token
        - ssh_key
        example: password
        type: string
      username:
        example: myusername
        type: string
    required:
    - name
    - secret_data
    - type
    type: object
  handlers.CreateEnvironmentRequest:
    properties:
      cpu_limit:
        maximum: 16
        minimum: 0.1
        type: number
      description:
        type: string
      env_vars:
        additionalProperties:
          type: string
        type: object
      memory_limit:
        maximum: 32768
        minimum: 128
        type: integer
      name:
        type: string
      type:
        description: 环境类型的 key，动态验证
        type: string
    required:
    - name
    - type
    type: object
  handlers.CreateProjectRequest:
    properties:
      credential_id:
        type: integer
      description:
        type: string
      name:
        type: string
      protocol:
        enum:
        - https
        - ssh
        type: string
      repo_url:
        type: string
    required:
    - name
    - protocol
    - repo_url
    type: object
  handlers.FetchRepositoryBranchesRequest:
    description: 获取Git仓库分支列表的请求参数
    properties:
      credential_id:
        example: 1
        type: integer
      repo_url:
        example: https://github.com/user/repo.git
        type: string
    required:
    - repo_url
    type: object
  handlers.FetchRepositoryBranchesResponse:
    description: 获取Git仓库分支列表的响应
    properties:
      branches:
        example:
        - '["main"'
        - '"develop"'
        - '"feature-1"]'
        items:
          type: string
        type: array
      can_access:
        example: true
        type: boolean
      error_message:
        example: ""
        type: string
    type: object
  handlers.ParseRepositoryURLRequest:
    description: 解析Git仓库URL的请求参数
    properties:
      repo_url:
        example: https://github.com/user/repo.git
        type: string
    required:
    - repo_url
    type: object
  handlers.ParseRepositoryURLResponse:
    description: 解析Git仓库URL的响应
    properties:
      host:
        example: github.com
        type: string
      is_valid:
        example: true
        type: boolean
      owner:
        example: user
        type: string
      protocol:
        example: https
        type: string
      repo:
        example: repo
        type: string
    type: object
  handlers.UpdateCredentialRequest:
    description: Request parameters for updating Git credentials
    properties:
      description:
        example: Updated description
        type: string
      name:
        example: Updated credential name
        type: string
      secret_data:
        additionalProperties:
          type: string
        example:
          '{"password"': '"newpassword"}'
        type: object
      username:
        example: newusername
        type: string
    type: object
  handlers.UpdateEnvironmentRequest:
    properties:
      cpu_limit:
        type: number
      description:
        type: string
      env_vars:
        additionalProperties:
          type: string
        type: object
      memory_limit:
        type: integer
      name:
        type: string
    type: object
  handlers.UpdateProjectRequest:
    description: 更新项目的请求参数
    properties:
      credential_id:
        example: 1
        type: integer
      description:
        example: 更新的项目描述
        type: string
      name:
        example: 更新的项目名称
        type: string
      repo_url:
        example: https://github.com/user/repo.git
        type: string
    type: object
  handlers.ValidateRepositoryAccessRequest:
    description: 验证Git仓库访问权限的请求参数
    properties:
      credential_id:
        example: 1
        type: integer
      repo_url:
        example: https://github.com/user/repo.git
        type: string
    required:
    - repo_url
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: XSHA Backend API service, providing user authentication, project management,
    Git credential management and other functions
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: XSHA Backend API
  version: "1.0"
paths:
  /admin/login-logs:
    get:
      consumes:
      - application/json
      description: Get system login log records, supporting filtering by username
        and pagination
      parameters:
      - description: Username filter
        in: query
        name: username
        type: string
      - description: Page number, defaults to 1
        in: query
        name: page
        type: integer
      - description: Page size, defaults to 20, maximum 100
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Login log list
          schema:
            properties:
              logs:
                items:
                  type: object
                type: array
              message:
                type: string
              page:
                type: number
              page_size:
                type: number
              total:
                type: number
              total_pages:
                type: number
            type: object
        "500":
          description: Failed to get login logs
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get login logs
      tags:
      - Authentication
  /admin/operation-logs:
    get:
      consumes:
      - application/json
      description: Get administrator operation log list with multi-condition filtering
        and pagination
      parameters:
      - description: Username filter
        in: query
        name: username
        type: string
      - description: Resource type filter
        in: query
        name: resource
        type: string
      - description: Operation type filter
        in: query
        name: operation
        type: string
      - description: Operation success status filter
        in: query
        name: success
        type: boolean
      - description: Start time filter (YYYY-MM-DD)
        in: query
        name: start_time
        type: string
      - description: End time filter (YYYY-MM-DD)
        in: query
        name: end_time
        type: string
      - description: Page number, default is 1
        in: query
        name: page
        type: integer
      - description: Page size, default is 20, maximum is 100
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Operation log list
          schema:
            properties:
              logs:
                items:
                  type: object
                type: array
              message:
                type: string
              page:
                type: number
              page_size:
                type: number
              total:
                type: number
              total_pages:
                type: number
            type: object
        "500":
          description: Failed to get operation logs
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get operation log list
      tags:
      - Admin Logs
  /admin/operation-logs/{id}:
    get:
      consumes:
      - application/json
      description: Get detailed information of a single operation log by ID
      parameters:
      - description: Log ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Operation log details
          schema:
            properties:
              log:
                type: object
              message:
                type: string
            type: object
        "400":
          description: Invalid log ID
          schema:
            properties:
              error:
                type: string
            type: object
        "404":
          description: Log not found
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get operation log details
      tags:
      - Admin Logs
  /admin/operation-stats:
    get:
      consumes:
      - application/json
      description: Get operation statistics information within a specified time range
      parameters:
      - description: Username filter
        in: query
        name: username
        type: string
      - description: Start time (YYYY-MM-DD), default is 30 days ago
        in: query
        name: start_time
        type: string
      - description: End time (YYYY-MM-DD), default is today
        in: query
        name: end_time
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Operation statistics information
          schema:
            properties:
              end_time:
                type: string
              message:
                type: string
              operation_stats:
                type: object
              resource_stats:
                type: object
              start_time:
                type: string
            type: object
        "500":
          description: Failed to get operation statistics
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get operation statistics
      tags:
      - Admin Logs
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login authentication using username and password
      parameters:
      - description: Login information
        in: body
        name: loginData
        required: true
        schema:
          properties:
            password:
              type: string
            username:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            properties:
              expires_at:
                type: string
              token:
                type: string
            type: object
        "400":
          description: Request parameter error
          schema:
            properties:
              error:
                type: string
            type: object
        "401":
          description: Authentication failed
          schema:
            properties:
              error:
                type: string
            type: object
        "429":
          description: Too frequent requests
          schema:
            properties:
              error:
                type: string
            type: object
      summary: User login
      tags:
      - Authentication
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Logout current user and add token to blacklist
      produces:
      - application/json
      responses:
        "200":
          description: Logout successful
          schema:
            properties:
              message:
                type: string
            type: object
        "400":
          description: Invalid token
          schema:
            properties:
              error:
                type: string
            type: object
        "401":
          description: Authentication failed
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Logout failed
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: User logout
      tags:
      - Authentication
  /dev-environments:
    get:
      consumes:
      - application/json
      description: Get current user's development environment list with pagination
        and filtering
      parameters:
      - description: Page number, default is 1
        in: query
        name: page
        type: integer
      - description: Page size, default is 10
        in: query
        name: page_size
        type: integer
      - description: Environment type filter
        in: query
        name: type
        type: string
      - description: Environment name filter
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Environment list
          schema:
            properties:
              environments:
                items:
                  type: object
                type: array
              total:
                type: number
            type: object
      security:
      - BearerAuth: []
      summary: Get environment list
      tags:
      - Development Environment
    post:
      consumes:
      - application/json
      description: Create a new development environment
      parameters:
      - description: Environment information
        in: body
        name: environment
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateEnvironmentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Environment created successfully
          schema:
            properties:
              environment:
                type: object
              message:
                type: string
            type: object
        "400":
          description: Request parameter error
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create development environment
      tags:
      - Development Environment
  /dev-environments/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的开发环境
      parameters:
      - description: 环境ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 环境删除成功
          schema:
            properties:
              message:
                type: string
            type: object
        "400":
          description: 删除失败
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: 删除环境
      tags:
      - 开发环境
    get:
      consumes:
      - application/json
      description: Get detailed information of a development environment by ID
      parameters:
      - description: Environment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Environment details
          schema:
            properties:
              environment:
                type: object
            type: object
        "404":
          description: Environment not found
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get environment details
      tags:
      - Development Environment
    put:
      consumes:
      - application/json
      description: 更新指定开发环境的信息
      parameters:
      - description: 环境ID
        in: path
        name: id
        required: true
        type: integer
      - description: 环境更新信息
        in: body
        name: environment
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateEnvironmentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 环境更新成功
          schema:
            properties:
              message:
                type: string
            type: object
        "400":
          description: 请求参数错误
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: 更新环境
      tags:
      - 开发环境
  /dev-environments/{id}/env-vars:
    get:
      consumes:
      - application/json
      description: 获取指定环境的环境变量
      parameters:
      - description: 环境ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 环境变量
          schema:
            properties:
              env_vars:
                type: object
            type: object
        "400":
          description: 获取失败
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: 获取环境变量
      tags:
      - 开发环境
    put:
      consumes:
      - application/json
      description: 更新指定环境的环境变量
      parameters:
      - description: 环境ID
        in: path
        name: id
        required: true
        type: integer
      - description: 环境变量
        in: body
        name: env_vars
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            properties:
              message:
                type: string
            type: object
        "400":
          description: 更新失败
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: 更新环境变量
      tags:
      - 开发环境
  /dev-environments/available-types:
    get:
      consumes:
      - application/json
      description: Get available environment types from system configuration
      produces:
      - application/json
      responses:
        "200":
          description: Available environment types
          schema:
            properties:
              types:
                items:
                  type: object
                type: array
            type: object
      security:
      - BearerAuth: []
      summary: Get available environment types
      tags:
      - Development Environment
  /git-credentials:
    get:
      consumes:
      - application/json
      description: Get the current user's Git credential list, supporting filtering
        by type and pagination
      parameters:
      - description: Credential type filter (password/token/ssh_key)
        in: query
        name: type
        type: string
      - description: Page number, defaults to 1
        in: query
        name: page
        type: integer
      - description: Page size, defaults to 20, maximum 100
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Credential list
          schema:
            properties:
              credentials:
                items:
                  type: object
                type: array
              message:
                type: string
              page:
                type: number
              page_size:
                type: number
              total:
                type: number
              total_pages:
                type: number
            type: object
        "500":
          description: Failed to get credential list
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get Git credential list
      tags:
      - Git Credentials
    post:
      consumes:
      - application/json
      description: Create a new Git credential, supporting password, token, and SSH
        key types
      parameters:
      - description: Credential information
        in: body
        name: credential
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateCredentialRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Credential created successfully
          schema:
            properties:
              credential:
                type: object
              message:
                type: string
            type: object
        "400":
          description: Request parameter error
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Failed to create credential
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create Git credential
      tags:
      - Git Credentials
  /git-credentials/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a specified Git credential
      parameters:
      - description: Credential ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Credential deleted successfully
          schema:
            properties:
              message:
                type: string
            type: object
        "400":
          description: Invalid credential ID
          schema:
            properties:
              error:
                type: string
            type: object
        "404":
          description: Credential not found
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete Git credential
      tags:
      - Git Credentials
    get:
      consumes:
      - application/json
      description: Get detailed information of a specified Git credential by ID
      parameters:
      - description: Credential ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Credential details
          schema:
            properties:
              credential:
                type: object
            type: object
        "400":
          description: Invalid credential ID
          schema:
            properties:
              error:
                type: string
            type: object
        "404":
          description: Credential not found
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get Git credential details
      tags:
      - Git Credentials
    put:
      consumes:
      - application/json
      description: Update information of a specified Git credential
      parameters:
      - description: Credential ID
        in: path
        name: id
        required: true
        type: integer
      - description: Credential update information
        in: body
        name: credential
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateCredentialRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Credential updated successfully
          schema:
            properties:
              message:
                type: string
            type: object
        "400":
          description: Request parameter error
          schema:
            properties:
              error:
                type: string
            type: object
        "404":
          description: Credential not found
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update Git credential
      tags:
      - Git Credentials
  /health:
    get:
      consumes:
      - application/json
      description: Check server status
      produces:
      - application/json
      responses:
        "200":
          description: Server status is normal
          schema:
            properties:
              lang:
                type: string
              message:
                type: string
              status:
                type: string
            type: object
      summary: Health check
      tags:
      - System
  /language:
    post:
      consumes:
      - application/json
      description: Set user's language preference
      parameters:
      - description: Language setting
        in: body
        name: languageData
        required: true
        schema:
          properties:
            language:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Language set successfully
          schema:
            properties:
              language:
                type: string
            type: object
        "400":
          description: Request parameter error
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Set language preference
      tags:
      - Internationalization
  /languages:
    get:
      consumes:
      - application/json
      description: Get all supported languages and current language from the system
      produces:
      - application/json
      responses:
        "200":
          description: Supported language list
          schema:
            properties:
              current:
                type: string
              languages:
                items:
                  type: string
                type: array
            type: object
      summary: Get supported language list
      tags:
      - Internationalization
  /projects:
    get:
      consumes:
      - application/json
      description: 获取当前用户的项目列表，支持分页和名称筛选
      parameters:
      - description: 项目名称筛选（模糊匹配）
        in: query
        name: name
        type: string
      - description: 协议类型筛选 (https/ssh)
        in: query
        name: protocol
        type: string
      - description: 页码，默认为1
        in: query
        name: page
        type: integer
      - description: 每页数量，默认为20
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 项目列表
          schema:
            properties:
              page:
                type: number
              page_size:
                type: number
              projects:
                items:
                  type: object
                type: array
              total:
                type: number
            type: object
        "500":
          description: 获取项目列表失败
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: 获取项目列表
      tags:
      - 项目
    post:
      consumes:
      - application/json
      description: 创建一个新的项目
      parameters:
      - description: 项目信息
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateProjectRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 项目创建成功
          schema:
            properties:
              id:
                type: number
              message:
                type: string
            type: object
        "400":
          description: 请求参数错误
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: 创建项目失败
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: 创建项目
      tags:
      - 项目
  /projects/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的项目
      parameters:
      - description: 项目ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 项目删除成功
          schema:
            properties:
              message:
                type: string
            type: object
        "400":
          description: 无效的项目ID
          schema:
            properties:
              error:
                type: string
            type: object
        "404":
          description: 项目不存在
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: 删除项目
      tags:
      - 项目
    get:
      consumes:
      - application/json
      description: 根据项目ID获取项目详细信息
      parameters:
      - description: 项目ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 项目详情
          schema:
            properties:
              project:
                type: object
            type: object
        "400":
          description: 无效的项目ID
          schema:
            properties:
              error:
                type: string
            type: object
        "404":
          description: 项目不存在
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: 获取项目详情
      tags:
      - 项目
    put:
      consumes:
      - application/json
      description: 更新指定项目的信息
      parameters:
      - description: 项目ID
        in: path
        name: id
        required: true
        type: integer
      - description: 项目更新信息
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateProjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 项目更新成功
          schema:
            properties:
              message:
                type: string
            type: object
        "400":
          description: 请求参数错误
          schema:
            properties:
              error:
                type: string
            type: object
        "404":
          description: 项目不存在
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: 更新项目
      tags:
      - 项目
  /projects/branches:
    post:
      consumes:
      - application/json
      description: 使用提供的凭据获取Git仓库的分支列表，同时验证访问权限
      parameters:
      - description: 仓库信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.FetchRepositoryBranchesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 获取分支列表成功
          schema:
            properties:
              message:
                type: string
              result:
                $ref: '#/definitions/handlers.FetchRepositoryBranchesResponse'
            type: object
        "400":
          description: 请求参数错误
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: 获取分支列表失败
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: 获取Git仓库分支列表
      tags:
      - 项目
  /projects/credentials:
    get:
      consumes:
      - application/json
      description: 根据协议类型获取兼容的Git凭据列表
      parameters:
      - description: 协议类型 (https/ssh)
        in: query
        name: protocol
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取凭据列表成功
          schema:
            properties:
              credentials:
                items:
                  type: object
                type: array
              message:
                type: string
            type: object
        "400":
          description: 请求参数错误
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: 获取兼容凭据
      tags:
      - 项目
  /projects/parse-url:
    post:
      consumes:
      - application/json
      description: 根据输入的Git仓库URL自动检测协议类型并解析URL信息
      parameters:
      - description: 仓库URL
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.ParseRepositoryURLRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 解析成功
          schema:
            properties:
              message:
                type: string
              result:
                $ref: '#/definitions/handlers.ParseRepositoryURLResponse'
            type: object
        "400":
          description: 请求参数错误
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: 解析Git仓库URL
      tags:
      - 项目
  /projects/validate-access:
    post:
      consumes:
      - application/json
      description: 使用提供的凭据验证是否能够访问指定的Git仓库
      parameters:
      - description: 仓库信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.ValidateRepositoryAccessRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 验证成功
          schema:
            properties:
              can_access:
                type: boolean
              message:
                type: string
            type: object
        "400":
          description: 请求参数错误或验证失败
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: 验证Git仓库访问权限
      tags:
      - 项目
  /system-configs:
    get:
      consumes:
      - application/json
      description: Get all system configurations without pagination
      produces:
      - application/json
      responses:
        "200":
          description: All configurations
          schema:
            properties:
              configs:
                items:
                  type: object
                type: array
            type: object
      security:
      - BearerAuth: []
      summary: Get all configurations
      tags:
      - System Configuration
    put:
      consumes:
      - application/json
      description: Update multiple system configurations in a single request
      parameters:
      - description: Configuration updates
        in: body
        name: configs
        required: true
        schema:
          $ref: '#/definitions/handlers.BatchUpdateConfigsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Configurations updated successfully
          schema:
            properties:
              message:
                type: string
            type: object
        "400":
          description: Request parameter error
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Batch update configurations
      tags:
      - System Configuration
  /task-conversations/{conversationId}/execution-log:
    get:
      consumes:
      - application/json
      description: 根据对话ID获取AI任务执行的详细日志
      parameters:
      - description: 对话ID
        in: path
        name: conversationId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.TaskExecutionLog'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 获取任务对话的执行日志
      tags:
      - 任务执行日志
  /task-conversations/{conversationId}/execution/cancel:
    post:
      consumes:
      - application/json
      description: 取消正在执行或待执行的AI任务
      parameters:
      - description: 对话ID
        in: path
        name: conversationId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 取消任务执行
      tags:
      - 任务执行日志
  /task-conversations/{conversationId}/execution/retry:
    post:
      consumes:
      - application/json
      description: 重试失败或已取消的AI任务
      parameters:
      - description: 对话ID
        in: path
        name: conversationId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 重试任务执行
      tags:
      - 任务执行日志
  /user/current:
    get:
      consumes:
      - application/json
      description: Get information of current logged-in user
      produces:
      - application/json
      responses:
        "200":
          description: User information
          schema:
            properties:
              username:
                type: string
            type: object
        "500":
          description: Failed to get user information
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get current user information
      tags:
      - User
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
